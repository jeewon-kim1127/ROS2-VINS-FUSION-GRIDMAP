%YAML:1.0

imu: 1         
num_of_cam: 1  

#common parameters
imu_topic: "/camera/imu"
image_topic: "/camera/color/image_raw"
#output_path: "/home/hyunjun/rpg_traj/laptop/vins_line"
output_path: "/home/vins_ws/output/"

#camera calibration
model_type: PINHOLE
camera_name: camera
image_width: 640
image_height: 480
distortion_parameters:
   k1: 0.13062021136283875
   k2: -0.4545309543609619
   p1: 0.0001472881849622354
   p2: -0.0001200065526063554
projection_parameters:
   fx: 602.7350463867188
   fy: 602.5762329101562
   cx: 326.6187744140625
   cy: 242.15406799316406

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
# 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [0.99957981, -0.0283746,  0.00592317,
          0.02856334,  0.99899042, -0.03467399,
          -0.00493333, 0.0348286,  0.99938112]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.02556875, 0.06172488, -0.00522292]

multiple_thread: 1

#feature traker paprameters
max_cnt: 250            # max feature number in feature tracking
min_dist: 15            # min distance between two features
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.1 #3 #0.1   # max solver itration time (ms), to guarantee real time
max_num_iterations: 10 #10 #8  # max solver itrations, to guarantee real time
keyframe_parallax: 5.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.08          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.004         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.00004         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.0e-6       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#loop closure parameters
loop_closure: 1                    # start loop closure
load_previous_pose_graph: 1        # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 0             # useful in real-time and large project
pose_graph_save_path: "/home/donguk/l515_test_edu/" # save and load path #l515_output_edu kefico_l515_output_4F
#visualization parameters
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 1                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 1.299983184216e-02               # unit: s. rolling shutter read out time per frame (from data sheet). #2.70829830045e-05 1.299983184216e-02

#visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
#visualize_camera_size: 0.25      # size of camera marker in RVIZ
